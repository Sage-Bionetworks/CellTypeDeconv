install_github("satijalab/seurat@da6cd08")
install_github("satijalab/seurat@da6cd08")
install_github("satijalab/seurat@da6cd08")
library(Seurat)
install.packages("devtools")
library(devtools)
install_github("hadley/devtools")
normalizePath("e:/rtools/bin")
normalizePath("E:/Rtools/bin")
normalizePath("e:/ProgramFiles/rtools/bin")
install_github("hadley/devtools")
?install_github
install.packages("C:/Users/Sumit/Downloads/Rtools34.exe", repos = NULL, lib="E:/ProgramFiles/R-3.3.2/library")
.libPaths()
getwd()
?install.packages
install.packages("devtools",lib = "E:/ProgramFiles/R-3.3.2/library")
install.packages("devtools", lib = "E:/ProgramFiles/R-3.3.2/library")
library(devtools)
install.packages("devtools",lib = "E:/ProgramFiles/R-3.3.2/library")
library(devtools)
install_github("hadley/devtools",lib = "E:/ProgramFiles/R-3.3.2/library")
install_github("satijalab/seurat",lib = "E:/ProgramFiles/R-3.3.2/library")
install.packages('Rtools')
devtools::install_github("gaborcsardi/pkgconfig")
devtools::install_github("igraph/rigraph")
shell("echo %PATH%")
shell("which gcc")
shell("which ls")
R.version
find_rtools()
PATH
find_rtools(T)
install.Rtools()
normalizePath()
normalizePath('c:/Rtools/bin')
install.Rtools()
find_rtools(T)
find_rtools()
r cmd
Sys.getenv()['PATH']
find_rtools()
find_rtools()
find_rtools()
find_rtools(T)
library(rtools)
library(Seurat)
library(ggplot2)
library(Seurat)
library(gdata)
library(gdata2)
library(Seurat)
library(Rcpp)
library(Seurat)
install.packages("Seurat", dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
library(Rcpp)
library(Seurat)
install.packages("ggplot2", dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
library(Seurat)
install.packages("devtools", dependencies = TRUE)
library(devtools)
install_github("satijalab/seurat", dependencies = TRUE)
install_github("satijalab/seurat", dependencies = TRUE)
remove.packages(c("Seurat"))
install.packages("Seurat", dependencies = TRUE)
install_github("satijalab/seurat", dependencies = TRUE)
install.packages("Seurat", dependencies = TRUE)
library(devtools)
install_github("satijalab/seurat", dependencies = TRUE)
library("devtools")
install_github("jw156605/SLICER")
install.packages(igraph)
install.packages("igraph")
library("devtools")
install_github("jw156605/SLICER")
install.packages("scatterplot3d")
library("devtools")
install_github("jw156605/SLICER")
install.packages("ll2")
install.packages("lle")
library("devtools")
install_github("jw156605/SLICER")
install.packages("alphahull")
library("devtools")
install_github("jw156605/SLICER")
library("devtools")
install_github("jw156605/SLICER")
library("devtools")
install_github("jw156605/SLICER")
load("E:/UWPhDWork/SCS/DropBarcoding/Excel_CSV_files/MouseSabProcessed061516.RData")
View(HSMM_expr_matrix)
HSMM <- reduceDimension(HSMM, max_components=2)
HSMM <- orderCells(HSMM, reverse=FALSE)
plot_cell_trajectory(HSMM, color_by="day_captured")
version()
require(MASS)
require(plyr)
require(reshape2)
require(ggplot2)
calcSigma <- function(X1,X2,l=1) {
Sigma <- matrix(rep(0, length(X1)*length(X2)), nrow=length(X1))
for (i in 1:nrow(Sigma)) {
for (j in 1:ncol(Sigma)) {
Sigma[i,j] <- exp(-0.5*(abs(X1[i]-X2[j])/l)^2)
}
}
return(Sigma)
}
x.star <- seq(-5,5,len=50)
# Calculate the covariance matrix
sigma <- calcSigma(x.star,x.star)
# Generate a number of functions from the process
n.samples <- 3
values <- matrix(rep(0,length(x.star)*n.samples), ncol=n.samples)
for (i in 1:n.samples) {
# Each column represents a sample from a multivariate normal distribution
# with zero mean and covariance sigma
values[,i] <- mvrnorm(1, rep(0, length(x.star)), sigma)
}
values <- cbind(x=x.star,as.data.frame(values))
values <- melt(values,id="x")
fig2a <- ggplot(values,aes(x=x,y=value)) +
geom_rect(xmin=-Inf, xmax=Inf, ymin=-2, ymax=2, fill="grey80") +
geom_line(aes(group=variable)) +
theme_bw() +
scale_y_continuous(lim=c(-2.5,2.5), name="output, f(x)") +
xlab("input, x")
fig2a
f <- data.frame(x=c(-4,-3,-1,0,2),
y=c(-2,0,1,2,-1))
# Calculate the covariance matrices
# using the same x.star values as above
x <- f$x
k.xx <- calcSigma(x,x)
k.xxs <- calcSigma(x,x.star)
k.xsx <- calcSigma(x.star,x)
k.xsxs <- calcSigma(x.star,x.star)
# These matrix calculations correspond to equation (2.19)
# in the book.
f.star.bar <- k.xsx%*%solve(k.xx)%*%f$y
cov.f.star <- k.xsxs - k.xsx%*%solve(k.xx)%*%k.xxs
n.samples <- 50
values <- matrix(rep(0,length(x.star)*n.samples), ncol=n.samples)
for (i in 1:n.samples) {
values[,i] <- mvrnorm(1, f.star.bar, cov.f.star)
}
values <- cbind(x=x.star,as.data.frame(values))
values <- melt(values,id="x")
# Plot the results including the mean function
# and constraining data points
fig2b <- ggplot(values,aes(x=x,y=value)) +
geom_line(aes(group=variable), colour="grey80") +
geom_line(data=NULL,aes(x=x.star,y=f.star.bar),colour="red", size=1) +
geom_point(data=f,aes(x=x,y=y)) +
theme_bw() +
scale_y_continuous(lim=c(-3,3), name="output, f(x)") +
xlab("input, x")
fig2b
sigma.n <- 0.1
# Recalculate the mean and covariance functions
f.bar.star <- k.xsx%*%solve(k.xx + sigma.n^2*diag(1, ncol(k.xx)))%*%f$y
cov.f.star <- k.xsxs - k.xsx%*%solve(k.xx + sigma.n^2*diag(1, ncol(k.xx)))%*%k.xxs
# Recalulate the sample functions
values <- matrix(rep(0,length(x.star)*n.samples), ncol=n.samples)
for (i in 1:n.samples) {
values[,i] <- mvrnorm(1, f.bar.star, cov.f.star)
}
values <- cbind(x=x.star,as.data.frame(values))
values <- melt(values,id="x")
gg <- ggplot(values, aes(x=x,y=value)) +
geom_line(aes(group=variable), colour="grey80") +
geom_line(data=NULL,aes(x=x.star,y=f.bar.star),colour="red", size=1) +
geom_errorbar(data=f,aes(x=x,y=NULL,ymin=y-2*sigma.n, ymax=y+2*sigma.n), width=0.2) +
geom_point(data=f,aes(x=x,y=y)) +
theme_bw() +
scale_y_continuous(lim=c(-3,3), name="output, f(x)") +
xlab("input, x")
gg
bla <- read.csv('E:/SageDocs/CellTypeData/TempDat.csv', sep = '\t', stringsAsFactors = F)
bla
head(bla)
gene_symbols = bla[11:dim(bla)[1],1]
gene_symbols
bla <- read.csv('E:/SageDocs/CellTypeData/TempDat.csv', stringsAsFactors = F)
head(bla)
gene_symbols = bla[11:dim(bla)[1],1]
gene_symbols
expr <- bla[11:dim(bla)[1],3:length(bla[1,])]
expr
ls <- [1,2,3]
ls <- [1 2 3]
ls <- list(c(1,2,3))
ls
ls[[1]]
bla <- c(ls,ls)
bla
bla$x <- bla
bla
y <- rnorm(3)
y
y <- runif(3)
y
x <- c(1,2,3)
cor(x,y)
Auto <- read.table('Auto.table')
install.packages('islr')
install.packages('ISLR')
library(ISLR)
load(Au5o)
load(Auto)
install.packages('MASS')
unique(c(1,1,2,3))
library(MASS)
attach(Auto)
Auto$mpg
plot(horsepower, mpg)
help(plot)
plot(horsepower, mpg, type = 'lines')
plot(horsepower, mpg)
dev.off()
summary(mpg)
dim(Auto)
bla <- dim(Auto)
bla[1,2]
bla[2]
Auto[1,2]
require(devtools)
devtools::install_github("hms-dbmi/brainmapr")
library(brainmapr)
## included datasets
invisible(structureID)
?structureID
invisible(vol3D)
?vol3D
invisible(annot3D)
?annot3D
invisible(gannot3D)
?gannot3D
invisible(mat)
?mat
plotProjectionXray(vol3D, t=8)
s <- 15 # voxel-level slice index
s2 <- round(s/dim(gannot3D)[3]*dim(vol3D)[3]) # convert to pixel-level slice index
plotSliceXray(vol3D, s2, t=8)
getIds(structureID, 'brain')
cids <- c(getStructureIds(structureID, 'midbrain'),
getStructureIds(structureID, 'ventricles, midbrain'),
getStructureIds(structureID, 'hindbrain'),
getStructureIds(structureID, 'ventricles, hindbrain')
)
sect3D <- structurePlot(cids, vol3D, annot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(sect3D, t=8, add=T)
plotSlice(vol3D, s2, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotSlice(sect3D, s2, t=8, add=T)
gp3D <- genePlot('Dcx', mat, gannot3D, plot=F)
dev.off()
gp3D <- genePlot('Dcx', mat, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gp3D, t=1, add=T)
plotSlice(vol3D, s2, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotSlice(gp3D, s, t=1, add=T)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T)
plotSlice(vol3D, s2, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotSlice(gpsect3D, s, t=1, add=T)
gp3D <- genePlot('Sox11', mat, gannot3D, plot=F)
gp3D <- genePlot('Sox11', mat, gannot3D, plot=F)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
dev.off()
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T)
plotProjection(gpsect3D, t=1, add=T)
plotSlice(vol3D, s2, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotSlice(gpsect3D, s, t=1, add=T)
dev.off()
gl <- c("Dcx", "Sox11", "FAKEGENE")
gp3D <- genePlot(gl, mat, gannot3D, t=1, plot=F)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T)
plotSlice(vol3D, s2, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotSlice(gpsect3D, s, t=1, add=T)
plotSlice(vol3D, s2, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotSlice(gpsect3D, s, t=1, add=T)
gl <- c("Dcx", "Sox11", "FAKEGENE")
gp3D <- genePlot(gl, mat, gannot3D, t=1, plot=F)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T)
help("plotProjection")
colorRampPalette()
help("colorRampPalette")
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col = colorRampPalette('blue'))
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col = colorRampPalette(c('blue')))
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col = colorRampPalette(c('rgb')))
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col = colorRampPalette(c("red","orange","blue"),method="linear"))
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col = colorRampPalette(c("red","orange","blue")))
Col = colorRampPalette(c("red","orange","blue"))
redblue<-colorRampPalette(c("red","orange","blue"),method="linear")
colorRampPalette
redblue<-colorRampPalette(c("red","orange","blue"),method="linear")
redblue<-colorRampPalette(c("red","orange","blue"))
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col = redblue())
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col = redblue
)
redblue()
redblue
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col = redblue())
load('E:/UWPhDWork/SCS/DropBarcoding/CellClassificationData/AllenISHMaps/structureID.RData')
load('E:/UWPhDWork/SCS/DropBarcoding/CellClassificationData/AllenISHMaps/E18.5.energy.RData')
load('E:/UWPhDWork/SCS/DropBarcoding/CellClassificationData/AllenISHMaps/E18.5.annot.RData')
plotProjectionXray(vol3D, t=15)
s <- 26 # slice
s2 <- round(s/dim(gannot3D)[3]*dim(vol3D)[3]) # convert
plotSliceXray(vol3D, s2, t=15)
gl1  <- c("Dlx2", "Dlx6as1", "Sp9", "Pbx3", "Dlx5", "Dlx1", "Necap1", "Zfhx3", "Pou3f4", "Sec63", "Gdi1", "Rbp1", "Rbmx", "Nrxn3", "Map3k13", "Meis1", "Slc6a1", "Sp8", "Pbx1", "Dcx", "Gad2", "Sirt7", "Hmgcll1")
# Weights
weights1 <- c(46.26915, 38.06011, 33.33369, 36.56755, 43.52929, 39.49066, 14.35763, 4.262908, 8.896505, 3.521533, 1.94611, 5.004284, 1.760767, 9.089976, 6.999584, 8.525134, 4.538585, 3.559675, 1.706482, 2.031702, 3.470824, 6.661706, 5.606481)
gp3D <- genePlot(gl1, mat, gannot3D, plot=F, weights=weights1)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T)
colorRampPalette(c("white", "grey"),space="Lab")(100)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col=colorRampPalette(c("blue"),space="Lab")(100))
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col=colorRampPalette(c("white","blue"),space="Lab")(100))
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T, col=colorRampPalette(c("white","red"),space="Lab")(100))
library(brainmapr)
load('E:/UWPhDWork/SCS/DropBarcoding/CellClassificationData/AllenISHMaps/structureID.RData')
load('E:/UWPhDWork/SCS/DropBarcoding/CellClassificationData/AllenISHMaps/E18.5.energy.RData')
load('E:/UWPhDWork/SCS/DropBarcoding/CellClassificationData/AllenISHMaps/E18.5.annot.RData')
gl1 <- c("Kif23", "Rad51", "Pole", "Mcm10", "Pabpc4l", "Pola1", "Ifi30", "Tmem97", "Cdc6", "Cdca5", "Gins2", "Prdx1", "Ticrr", "Car14", "Mis18bp1", "Kntc1", "Cdc45", "Wee1", "Poc1a", "Mgme1", "Ncaph", "Exo1", "Isyna1", "Rad54b", "Shmt1", "Sgol1", "Shcbp1", "Vcam1", "Bora", "Hmgb2", "Cenpn", "Esco2", "Espl1", "Pole2", "BC030867", "Zfp367", "Sox3", "Pus3", "Ndc80", "Pold1", "2810408I11Rik", "Lpar1", "Lhfpl2", "Ccnf", "Gpx7", "BC055324", "Megf10", "Fgfbp3", "Cdt1", "2700099C18Rik", "Arhgef39", "Suv39h2", "Trps1", "Clspn", "Siva1", "Gulp1", "Setdb2", "Rpa2", "Wwtr1", "Ak4", "Ing5", "Crip1", "Orc1", "Acrbp", "Arhgap31", "Rad50", "Rragb", "Med26", "Samhd1", "Lpcat1", "Dhx32", "Mms22l", "B330016D10Rik", "Clu", "Gm11627", "Dctd", "Dleu2", "Atad5", "Fgfr2", "Pxdn", "H2afz", "Ran", "Tyms", "Kbtbd11", "Hist1h1b", "Ercc6l", "Syde2", "D3Ertd751e", "2810417H13Rik", "Scml2", "Kif2c", "Kif22", "Depdc1a", "Tmem98", "Tyro3", "Ccdc77", "Adat1", "Tk1", "Sfxn5", "BC052040", "Mybl2", "Sox2", "Gm3893", "Ptpru", "Fn1", "Npm1", "Mad2l1", "Fbxo30", "Etl4", "Rpsa", "Aif1l", "Hmgn2", "Lrrc1", "Cad", "Hes1", "Hmgb1", "Msrb2", "Ogfod3", "Cluh", "Hells", "Diap3", "Gapdh", "Cenph", "Kif14", "Thoc3", "Dusp16", "Rev1", "9430015G10Rik", "Traf3", "Exosc8", "Rad51ap1", "Cdk2", "Ppic", "Neil3", "Tom1l1", "Prr14", "Xpo4", "Tgfb2", "Arhgap17", "Igflr1", "Gpx8", "Paics", "Hirip3", "Gen1", "Polq", "Fbxo5", "Uck1", "Tcf7l2", "Mipep", "Dnaaf2", "0610007N19Rik", "Actn1", "Atp5sl", "Pla2g12a", "Cdca7", "Scd1", "Tuba1b", "2610015P09Rik", "Mir3112", "Gtse1", "Nedd9", "Cry1", "Nasp", "Exosc7", "Iqcc", "Tmem110", "Acot1", "Grb10", "S1pr1", "Ckap2", "Coq10a", "Idi1", "Cdca7l", "Incenp", "Mettl16", "Mdk", "Haus5", "Cks1b", "Tmed5", "Pdpn", "Gpc3", "Gar1", "Igsf11", "Msh6", "Mif", "Zfp36l1", "Igfbp5", "Mns1", "Dgkd", "Sdc1", "Zfp748", "Kazn", "Prr15", "Top2a", "Etaa1", "Sapcd2", "Notch2", "Agpat3", "Gatad2a", "Nde1", "Dnajc3", "Gmds", "Psat1", "Fras1", "Cenpm", "Casc5", "Adamts6", "Zadh2", "Mt1", "Zfp579", "Mki67", "Set", "Sfrp2", "4930422G04Rik", "Zfyve21", "Ddx51", "Gas1", "Haus3", "Ect2", "Fam84b", "Cenpp", "Rlbp1", "Nmral1", "Hist1h4i", "Bmpr1b", "Chtf18", "Metrn", "Nrde2", "Lrr1", "Mir17hg", "Hspd1", "Sav1", "Fzd10", "Fndc3c1", "Slbp", "4931417G12Rik", "Hn1l", "Six5", "Enoph1", "Ccnd2", "Kif4", "Gorab", "1190002F15Rik", "Gins1", "Wnt5b", "Snap23", "Cln3", "Gm8096", "Cpped1", "Jmy", "Fam229b", "Ajuba", "Stard4")
weights1 <- c(25.70137, 29.59888, 29.76567, 24.68016, 20.78329, 30.52546, 12.57898, 23.69041, 24.49737, 21.06707, 32.37425, 5.917703, 19.79369, 21.01805, 25.45902, 22.69036, 23.80137, 21.25906, 16.99061, 18.17822, 17.96696, 17.36431, 17.05992, 14.48438, 21.92231, 19.96471, 17.36249, 19.89858, 15.78619, 6.346554, 17.87554, 20.61649, 5.917697, 19.22824, 16.48714, 22.7253, 13.72571, 13.32367, 19.62173, 16.07113, 15.13676, 21.24849, 14.2775, 16.07539, 14.12963, 11.73834, 15.93613, 10.93345, 11.10596, 9.628688, 9.79836, 16.14695, 14.06795, 23.8073, 7.214335, 10.8215, 11.636, 20.89295, 8.902458, 7.897001, 17.6958, 6.402814, 9.927401, 9.585663, 8.215373, 15.92776, 8.194774, 6.135632, 10.93828, 7.952126, 16.78108, 16.1418, 2.070826, 6.528858, 9.800817, 11.02213, 9.256968, 16.95434, 12.59132, 8.249959, 2.740084, 2.878239, 4.189773, 14.78767, 18.76207, 1.33938, 5.344057, 6.081742, 6.228143, 3.545454, 9.881127, 20.20164, 3.719686, 12.51794, 11.40345, 12.55717, 7.988526, 16.67645, 8.497081, 5.096289, 2.680227, 16.3119, 3.742364, 5.846637, 17.05004, 1.718221, 10.56812, 9.421022, 14.12226, 1.699372, 17.3678, 2.077661, 0.6450837, 12.12757, 12.55257, 1.53705, 10.15608, 2.53861, 8.247943, 12.41625, 1.642412, 1.629888, 5.639646, 3.234741, 12.14668, 4.45925, 9.412865, 5.930603, 7.660363, 3.666648, 2.547089, 11.78479, 12.261, 2.025131, 4.379496, 11.31754, 1.280813, 2.444286, 5.080282, 1.151702, 4.837149, 1.957394, 10.35392, 1.138974, 1.366205, 12.28883, 1.020337, 13.09234, 6.433306, 6.510424, 9.765636, 10.70904, 1.219111, 7.532179, 5.637852, 5.4065, 1.321662, 8.798219, 1.094809, 1.092081, 0.9728729, 0.9702798, 2.048368, 2.667087, 5.972456, 3.175221, 0.2115612, 2.327173, 0.2101568, 5.848486, 0.8351951, 2.916965, 3.436796, 9.419663, 8.348403, 1.2368, 8.347702, 1.748644, 8.086359, 8.802871, 8.393264, 6.835873, 3.0586, 10.96285, 1.116587, 4.741809, 7.759272, 7.842224, 7.012087, 6.010361, 4.607943, 5.191336, 3.076776, 3.572298, 1.765293, 0.7824073, 7.956223, 7.234441, 2.122103, 5.009876, 6.250351, 0.7641022, 2.843459, 0.7556067, 6.598702, 8.607848, 4.863156, 0.09266894, 6.300077, 0.8268156, 3.471054, 0.8220918, 4.737982, 8.173211, 4.712872, 0.09035995, 5.151065, 4.966644, 5.934447, 3.802551, 7.073224, 0.4405537, 1.760735, 6.330614, 6.589453, 7.280396, 0.8713346, 5.207967, 0.4322329, 4.748665, 1.033637, 0.8578934, 0.08547415, 7.000531, 1.535777, 0.0850716, 4.053823, 0.4203083, 6.716998, 0.9235872, 6.528929, 5.439931, 3.548127, 5.280641, 0.3300401, 2.31028, 4.680702, 0.08206534, 3.604325, 6.05617, 4.008056, 3.190085, 0.6513329)
gp3D <- genePlot(gl1, mat, gannot3D, plot=F)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T)
plotSlice(vol3D, s2, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotSlice(gpsect3D, s, t=1, add=T)
gl2 <- c("Ftl1", "Stmn3", "Rnf185", "Serinc5", "Plk3", "Nfasc", "Apc", "Khdrbs2", "1810041L15Rik", "Celsr3", "Klhdc5", "Plch2", "Tram1l1", "Plcl1", "Calcoco1", "Gm2694", "2510009E07Rik", "Srgap1", "Klf7", "Nhlh2", "Nsg2", "Tmtc4", "Nkain3", "Actr2", "Wdr83", "Ina", "Celf3", "Pak7", "Slc4a8", "Gpr19", "Fam5b", "Gpr137", "Atp6v1g1", "Shisa7", "Neurod1", "Slc35a1", "Nme3", "Fkbpl", "Apc2", "Frmd4b", "Clvs1", "Evl", "Dcc", "Kif3c", "Ank", "Mbnl2", "Tubb4a", "Brwd3", "Cacna2d1", "Sgip1", "Itm2b", "Ccser1", "Ndfip2", "Klhl29", "Yod1", "Vcan", "Ppm1a", "Hn1", "Atl1", "Fam84a", "Atp6v1f", "Atg16l1", "Rbfox1", "Pcnxl4", "Jakmip2", "Rab3d", "Stxbp1", "Tspyl4", "St8sia3", "Mon2", "Shank1", "Cabp1", "Slc27a4", "Ptprs", "Jup", "Pcdh7", "Rfx3", "Ankzf1", "Kdm6b", "Hist3h2a", "Gramd1a", "Cdk14", "Lcor", "Elavl4", "Slco5a1", "Tmem44", "Cntfr", "Ikbkb", "Ptpro", "Mfap4", "Ankrd12", "Trim46", "Atp6v1e1", "Pcp4", "Gcdh", "Necab3", "Cpeb4", "Rab3a", "Nuak1", "9330133O14Rik", "Frmd5", "Frrs1l", "Rcan2", "Prdm8", "Selk", "Cdyl2", "Dhtkd1", "Kcnq2", "Vps37c", "Actg1", "Gas8", "Rwdd3", "Sema6d", "Ypel5", "Cttnbp2", "Islr2", "Neurod6", "Cbln2", "Ncan", "Fam57b", "Atg9a", "Ppp1r14a", "Cdk5r1", "Kalrn", "Snap91", "Tanc2", "Crmp1", "Edil3", "Kif5a", "Ralgps1", "Disp2", "Ass1", "Tmsb4x", "Dbc1", "Mapre3", "Zzef1", "Gna12", "Gstm7", "Sv2b", "Tiam2", "Zfp46", "Ank3", "Calm2", "Nrn1", "Jph4", "Snap25", "Ttc3", "Oscp1", "Cntn2", "Fam49a", "Serpini1", "Rab3c", "Chst15", "Sv2a", "Dpysl3", "Sema4g", "Elavl3", "Vps13c", "Scn3a", "Nav3", "Cnr1", "Atp2b2", "Nnat", "Rufy3", "Tmsb10", "Nefm", "Tnfrsf21", "Kif21b", "Mcf2l", "Stmn1", "Gmnc", "Hecw1", "Enpp5", "L1cam", "Sorbs2", "Cdc42ep2", "Nmnat2", "Tuba1a", "Unc79", "Scn3b", "3632451O06Rik", "Pde1c", "Lrfn5", "Rtn2", "Gabrb2", "Slc17a6", "1700088E04Rik", "Trappc6a", "Psd", "Hmgcll1", "Nav1", "Tub", "Actl6b", "March8", "Pxk", "Tbr1", "Lrrc7", "Akap6", "Dscaml1", "Dnajc6", "Dopey2", "Galnt14", "Osbpl5", "Mllt11", "Sez6l2", "Nxph4", "Gabrg2", "Tubb3", "Chga", "Gdi1", "Dusp8", "Cd200", "Nrxn1", "Ralyl", "Mapk10", "Sox11", "Wnt7b", "Ndrg4", "Magel2", "Cbln4", "Dner", "Myt1l", "Dusp4", "Map2", "Syt4", "Atp1a3", "Smim18", "Ppfia2", "Plxna4", "Rtn1", "Map1b", "Snrpn", "Nrep", "Dcx", "Stmn2", "Tagln3")
weights2 <- c(2.136911, 9.205157, 15.04057, 14.38306, 15.63322, 15.21329, 7.556623, 15.73863, 15.24225, 14.90353, 16.34308, 4.423723, 16.73704, 12.81987, 15.2705, 16.21419, 14.84824, 15.80225, 15.23299, 14.40521, 9.90502, 16.11969, 12.89575, 3.311071, 17.46972, 18.18689, 15.31839, 16.47549, 15.68371, 16.4865, 12.65875, 15.94118, 3.6415, 15.56466, 18.86522, 17.09324, 17.45138, 17.43719, 14.81852, 16.76695, 16.04711, 16.71587, 8.95732, 15.21574, 16.57723, 17.9463, 18.28922, 17.0956, 18.51236, 14.47279, 8.607997, 16.33777, 17.69629, 18.0779, 18.39833, 8.384968, 17.93645, 3.883598, 18.37481, 19.62326, 7.079478, 18.46066, 18.57387, 19.86684, 17.57067, 17.17134, 19.19559, 17.28012, 19.51456, 18.63038, 16.346, 11.30094, 11.65711, 3.8573, 18.27631, 19.3324, 10.47136, 19.1688, 7.534274, 12.81903, 16.9127, 17.81924, 17.61544, 10.82315, 20.32141, 19.71257, 18.33481, 19.41048, 18.02951, 20.99936, 20.16026, 18.26461, 9.186602, 21.50746, 16.10645, 22.00737, 8.978131, 21.77559, 21.36687, 20.04521, 19.50468, 21.11922, 18.66986, 17.83665, 5.94918, 16.38831, 13.5438, 18.87614, 20.60921, 4.189785, 22.75836, 23.09122, 17.50587, 11.29154, 22.14349, 22.18913, 27.94501, 22.19199, 9.658578, 21.14181, 21.52989, 21.78602, 23.19786, 24.72262, 24.1665, 20.88067, 16.71132, 24.0294, 23.02293, 20.88419, 15.83706, 16.24816, 6.450837, 23.94848, 23.94848, 25.70524, 19.99748, 26.62003, 22.178, 24.94079, 24.08407, 26.47341, 6.700568, 28.2764, 22.20154, 25.95458, 6.91906, 25.88305, 22.42306, 27.05859, 30.87535, 21.7612, 22.35798, 25.03427, 17.46535, 27.2852, 16.16853, 27.74718, 31.36692, 28.40496, 35.20579, 30.09073, 8.811513, 18.08419, 7.209913, 25.47581, 25.36688, 31.83581, 28.58641, 6.66765, 30.0685, 31.42778, 30.04373, 29.97091, 27.10214, 30.83477, 25.14173, 8.179623, 29.54644, 30.6819, 31.9696, 31.49879, 31.99548, 33.65421, 32.11973, 37.97322, 24.91364, 31.93946, 30.68069, 33.96646, 30.45905, 34.63189, 34.76243, 35.00472, 35.09193, 39.13838, 33.9888, 37.8095, 35.00221, 32.88669, 35.75556, 38.66944, 36.92484, 21.31074, 38.37572, 35.98967, 31.81786, 30.92585, 30.85406, 22.2424, 39.26337, 40.44131, 41.71698, 39.48613, 38.26427, 14.63608, 40.31382, 40.53405, 42.45989, 43.87076, 43.02692, 45.8313, 41.15421, 27.19848, 48.42665, 45.21538, 48.54704, 48.93636, 47.4931, 33.36695, 19.00539, 46.4681, 31.47316, 56.75082, 60.46812, 28.49932)
gp3D <- genePlot(gl2, mat, gannot3D, plot=F, weights=weights2)
gl1  <- c("Dlx2", "Dlx6as1", "Sp9", "Pbx3", "Dlx5", "Dlx1", "Necap1", "Zfhx3", "Pou3f4", "Sec63", "Gdi1", "Rbp1", "Rbmx", "Nrxn3", "Map3k13", "Meis1", "Slc6a1", "Sp8", "Pbx1", "Dcx", "Gad2", "Sirt7", "Hmgcll1")
# Weights
weights1 <- c(46.26915, 38.06011, 33.33369, 36.56755, 43.52929, 39.49066, 14.35763, 4.262908, 8.896505, 3.521533, 1.94611, 5.004284, 1.760767, 9.089976, 6.999584, 8.525134, 4.538585, 3.559675, 1.706482, 2.031702, 3.470824, 6.661706, 5.606481)
gp3D <- genePlot(gl1, mat, gannot3D, plot=F, weights=weights1)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
cids <- c(getStructureIds(structureID, 'midbrain'),
)
cids <- c(getStructureIds(structureID, 'midbrain'),
getStructureIds(structureID, 'ventricles, midbrain'),
getStructureIds(structureID, 'hindbrain'),
getStructureIds(structureID, 'ventricles, hindbrain')
)
gl1  <- c("Dlx2", "Dlx6as1", "Sp9", "Pbx3", "Dlx5", "Dlx1", "Necap1", "Zfhx3", "Pou3f4", "Sec63", "Gdi1", "Rbp1", "Rbmx", "Nrxn3", "Map3k13", "Meis1", "Slc6a1", "Sp8", "Pbx1", "Dcx", "Gad2", "Sirt7", "Hmgcll1")
# Weights
weights1 <- c(46.26915, 38.06011, 33.33369, 36.56755, 43.52929, 39.49066, 14.35763, 4.262908, 8.896505, 3.521533, 1.94611, 5.004284, 1.760767, 9.089976, 6.999584, 8.525134, 4.538585, 3.559675, 1.706482, 2.031702, 3.470824, 6.661706, 5.606481)
gp3D <- genePlot(gl1, mat, gannot3D, plot=F, weights=weights1)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
gl <- c("Dcx", "Sox11", "FAKEGENE")
gp3D <- genePlot(gl, mat, gannot3D, t=1, plot=F)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(vol3D, col=colorRampPalette(c("white", "grey"),space="Lab")(100), t=8)
plotProjection(gpsect3D, t=1, add=T)
plotProjection(gpsect3D, t=1, add=T, col=colorRampPalette(c("white","red"),space="Lab")(100))
cids <- c(getStructureIds(structureID, 'midbrain'),
+ getStructureIds(structureID, 'ventricles, midbrain'),
+ getStructureIds(structureID, 'hindbrain'),
+ getStructureIds(structureID, 'ventricles, hindbrain')
+ )
gl <- c('Retsat','5730455P16Rik','Gchfr','Kcnj2','Uba7')
gp3D <- genePlot(gl, mat, gannot3D, t=1, plot=F)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(gpsect3D, t=1, add=T, col=colorRampPalette(c("white","blue"),space="Lab")(100))
gl <- c('Ctsw','Mag','2310075C17Rik','1700028K03Rik','Slc46a2')
gp3D <- genePlot(gl, mat, gannot3D, t=1, plot=F)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(gpsect3D, t=1, add=T, col=colorRampPalette(c("white","blue"),space="Lab")(100))
gl <- c('Nras','Rabgap1','Cpeb1','Cdc45','Tmem147','Mcf2')
gp3D <- genePlot(gl, mat, gannot3D, t=1, plot=F)
gpsect3D <- structurePlot(cids, gp3D, gannot3D, plot=F)
plotProjection(gpsect3D, t=1, add=T, col=colorRampPalette(c("white","blue"),space="Lab")(100))
head(rownames(mat))
rownames(mat)
cids <- getStructureIds(structureID, 'brain')
rownames(mat)
library(devtools)
library(devtools)
install_github("aedin/NCI60Example")
load("E:/UWPhDWork/SCS/DropBarcoding/MultiViewDimRed/NCI60Example-master/NCI60Example-master/data/nci60.rda")
nci60
nci60$mrna
dim(nci60$mrna)
dim(nci60$prot)
dim(nci60$miRNA)
write.csv('E:/UWPhDWork/scs/DropBarcoding/MultiViewDimRed/Datasets/nci60mRNA.csv',nci60$mrna)
write.csv(nci60$mrna,'E:/UWPhDWork/scs/DropBarcoding/MultiViewDimRed/Datasets/nci60mRNA.csv')
write.csv(nci60$mirna,'E:/UWPhDWork/scs/DropBarcoding/MultiViewDimRed/Datasets/nci60miRNA.csv')
write.csv(nci60$prot,'E:/UWPhDWork/scs/DropBarcoding/MultiViewDimRed/Datasets/nci60prot.csv')
write.csv(nci60$miRNA,'E:/UWPhDWork/scs/DropBarcoding/MultiViewDimRed/Datasets/nci60miRNA.csv')
source('http://www.bioconductor.org/biocLite.R')
biocLite('CellMix', siteRepos = 'http://web.cbio.uct.ac.za/~renaud/CRAN', type='both')
source('E:/SageDocs/PredictingDriverGenes/MiscFiles/PullExpressionRNAseq.R')
pullExpressionAndPhenoWinsorized()
synapseClient::synapseLogin()
synapseClient::synapseLogin()
synapseClient::synapseLogin
library(synapseClient)
source("http://depot.sagebase.org/CRAN.R")
pkgInstall(c("synapseClient"))
install.packages(package, repos = c(sageRepo, "http://cran.r-project.org"), ...)
source("http://depot.sagebase.org/CRAN.R")
pkgInstall(c("synapseClient"))
synapseClient::synapseLogin()
library(dplyr)
#get synIds for gene expression variables
geneExpressionDataManifest <- synapseClient::synTableQuery("SELECT * FROM syn8681664 where dataType = 'mRNA' and columnScaled = 'TRUE'")
geneExpressionDataManifest <- synapseClient::synTableQuery("SELECT * FROM syn8681664 where dataType = 'mRNA' and columnScaled = 'TRUE'")
covariateManifest <- synapseClient::synTableQuery("SELECT * FROM syn9704300 WHERE ( ( normalizationType = 'CQN' ) AND ( dataSubType = 'covariates' ) )")
install.packages('dplyr')
install.packages("dplyr")
synapseClient::synapseLogin()
library(dplyr)
geneExpressionDataManifest <- synapseClient::synTableQuery("SELECT * FROM syn8681664 where dataType = 'mRNA' and columnScaled = 'TRUE'")
library(synapseClient)
geneExpressionDataManifest <- synTableQuery("SELECT * FROM syn8681664 where dataType = 'mRNA' and columnScaled = 'TRUE'")
synTableQuery("SELECT * FROM syn8681664 where dataType = 'mRNA'")
synTableQuery()
synTableQuery
summaryDf3 <- synapseClient::synTableQuery("SELECT * FROM syn10227506")@values
source("http://depot.sagebase.org/CRAN.R")
pkgInstall(c("synapseClient"))
install.packages(package, repos = c(sageRepo, "http://cran.r-project.org"), ...)
source("http://depot.sagebase.org/CRAN.R")
pkgInstall(c("synapseClient"))
summaryDf3 <- synapseClient::synTableQuery("SELECT * FROM syn10227506")@values
c(T,F) and c(T,T)
c(T,F) * c(T,T)
logical(c(T,F) * c(T,T))
as.logical(c(T,F) * c(T,T))
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq")
setwd('E:/SageDocs/CellTypeDeconv/')
library(R.matlab)
temp <- readMat('E:/UWPhDWork/SCS/DropBarcoding/CellClassificationData/10xPooled/Pooled400_data.mat')
Lab <- temp$Lab
Dat <- temp$Dat
Dat <- data.frame(as.matrix(temp$Dat))
head(Dat)
source('DESeq_Helper.R')
l <- Estimate.Parameters(Dat, Lab = )
l <- Estimate.Parameters(Dat, Lab)
source('DESeq_Helper.R')
l <- Estimate.Parameters(Dat, Lab)
source('DESeq_Helper.R')
l <- Estimate.Parameters(Dat, Lab)
head(l$M)
head(l$Disp)
plot(l$M, l$Disp)
plot(log10(.0001 + l$M), log(.0001 + l$Disp))
l <- Estimate.Parameters(Dat, rep(1,400))
source('DESeq_Helper.R')
l2 <- Estimate.All.CellTypes(Dat, Lab)
install.packages('MASS')
library(MASS)
help(rnegbin)
m <- c(1:10)
theta <- c(1:10)
rnegbin(10,m,theta)
rnegbin(m,m,theta)
rnegbin(1,m,theta)
rnegbin(2,m,theta)
rnegbin(m,theta)
rnegbin(m,theta = theta)
m <- c(0:9)
rnegbin(m,theta = theta)
rnegbin(m,theta = theta)
rnegbin(m,theta = theta)
rnegbin(m,theta = theta)
rnegbin(m,theta = theta)
rep(rnegbin(m,theta = theta),2)
rep(rnegbin(m,theta = theta),2)
replicate(2, rnegbin(m,theta = theta))
1/c(1:3)
d <- data.frame()
